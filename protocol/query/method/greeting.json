{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/dedis/popstellar/master/protocol/query/method/greeting.json",
    "description": "Match propagation of a greeting on a channel query",
    "$comment": "A message the back-end sends to clients when they connect to it. It informs clients about the servers public key and its peers",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "method": {
            "description": "[String] operation to be performed by the query",
            "const": "greeting"
        },

        "params": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "channel": {
                    "description": "[String] name of the channel",
                    "type": "string",
                    "pattern": "^/root(/[^/]+)+$"
                },

                "sender": {
                    "description": "[Base64String] public key of the server",
                    "type": "string",
                    "contentEncoding": "base64",
                    "$comment": "Note: the string is encoded in Base64"
                },

                "address": {
                    "description": "Canonical address of the server without a protocol prefix",
                    "type": "string",
                    "pattern": "^(?!.*://).*$"
                },

                "peers": {
                    "description": "A list of peers the server is connected to (excluding itself). These can be other organizers or witnesses",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "description": "Address of the peer without a protocol prefix",
                                "type": "string",
                                "pattern": "^(?!.*://).*$"
                            }
                        }
                    }
                }
            },

            "required": ["channel", "sender", "address", "peers"]
        },

        "jsonrpc": {
            "$comment": "Defined by the parent, but needed here for the validation"
        }
    },

    "required": ["method", "params", "jsonrpc"]
}
