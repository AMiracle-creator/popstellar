{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/dedis/popstellar/master/protocol/answer/answer.json",
    "title": "Match a custom JsonRpc 2.0 message answer",
    "description": "Match a positive or negative server answer",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "result": {
            "description": "In case of positive answer, result of the client query. This field is absent if there is an error",
            "$comment": "To make it easier to differentiate different result types, every result type must have a 'type' constant property",
            "oneOf": [
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "const": "response_code"
                        },
                        "response_code": {
                            "const": 0,
                            "$comment": "Default return value indicating a success"
                        }
                    },
                    "required": ["type", "response_code"]
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "const": "messages"
                        },
                        "messages": {
                            "type": "array",
                            "items": {
                                "$ref": "../query/method/message/message.json"
                            },
                            "minItems": 0,
                            "$comment": "Return value for a `catchup` request"
                        }
                    },
                    "required": ["type", "messages"]
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "const": "election_key"
                        },
                        "election": {
                            "type": "string",
                            "contentEncoding": "base64",
                            "description": "The election id the new election key is associated with",
                            "$comment": "Hash : HashLen('Election', lao_id, created_at, name)"
                        },
                        "election_key": {
                            "description": "[Base64String] public key of the election",
                            "type": "string",
                            "contentEncoding": "base64",
                            "$comment": "Note: the string is encoded in Base64"
                        }
                    },
                    "required": ["type", "election", "election_key"]
                }
            ]
        },

        "error": {
            "description": "In case of negative answer, error generated by the client query",
            "$ref": "error.json"
        },

        "id": {
            "oneOf": [
                {
                    "type": "integer",
                    "$comment": "The id matching the request id."
                },
                {
                    "type": "null",
                    "$comment": "If there was an error in detecting the request id, it must be null."
                }
            ],
            "$comment": "The id matches the request id. If there was an error in detecting the id, it must be null"
        },

        "jsonrpc": {
            "$comment": "Defined by the parent, but needed here for the validation"
        }
    },

    "oneOf": [
        {
            "required": ["result", "id", "jsonrpc"]
        },
        {
            "required": ["error", "id", "jsonrpc"]
        }
    ],
    "$comment": "Can contain either a `result` or an `error`."
}
