// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Popcha scanner correct behavior when sending request closes scanner when it is a successful request 1`] = `
<View
  style={
    {
      "flex": 1,
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 0,
      }
    }
  />
  <View
    style={
      {
        "flex": 1,
        "flexDirection": "column",
        "margin": 16,
      }
    }
  >
    <View
      style={
        {
          "bottom": 0,
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "space-between",
          }
        }
      >
        <View>
          <Text
            style={
              {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "marginBottom": 16,
                "textAlign": "left",
              }
            }
          >
            Welcome on the PoPcha screen, you are currently in the LAO: 
            -
            M
            2
            5
            9
            c
            5
            J
            l
            a
            k
            L
            V
            l
            X
            B
            R
            a
            8
            9
            3
            p
            c
            E
            -
            4
            s
            7
            s
            s
            O
            8
            J
            v
            5
            g
            X
            O
            v
            t
            r
            e
            E
            =
          </Text>
        </View>
        <View>
          <View
            style={
              [
                {
                  "backgroundColor": "#fff",
                  "borderRadius": 8,
                  "padding": 8,
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
              testID="popcha_scanner_button"
            >
              <Text
                style={
                  [
                    {
                      "color": "#000",
                      "fontSize": 20,
                      "lineHeight": 26,
                      "textAlign": "left",
                    },
                    {
                      "color": "#3742fa",
                    },
                  ]
                }
              >
                Open Scanner
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Popcha scanner correct behavior when sending request shows error message with failed request 1`] = `
[
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 0,
        }
      }
    >
      <View />
    </View>
    <View
      style={
        {
          "flex": 1,
          "flexDirection": "column",
          "margin": 16,
        }
      }
    >
      <View
        style={
          {
            "bottom": 0,
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "space-between",
            }
          }
        >
          <View />
          <View
            style={
              {
                "opacity": 0.5,
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="300"
              bbWidth="300"
              focusable={false}
              height={300}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 300,
                    "width": 300,
                  },
                ]
              }
              vbHeight={494}
              vbWidth={494}
              width={300}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M392.4 101.2h-22.398v22.398H392.4V101.2Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199V78.802h67.199v67.199Zm-313.6-22.398h22.398v-22.398h-22.398v22.398ZM56.402 168.4h112v-112h-112v112Zm22.402-89.598h67.199v67.199H78.804V78.802Zm313.6 291.2h-22.398V392.4h22.398v-22.398Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199v-67.199h67.199v67.199Zm-156.8-291.2h22.398v-22.398h22.398V78.807h-22.398V56.409h-67.199v22.398h44.801v22.398h-22.398v44.801h22.398v-22.403Zm-22.398 22.398h-22.398v22.398h22.398v-22.398Zm-44.801-22.398v22.398h22.398v-22.398h-22.398Zm0-22.402h22.398V78.803h-22.398v22.398Zm-44.801 112h-22.398v22.398h22.398v-22.398Zm89.602-22.398v22.398h67.199v-22.398H280.41v-44.801h-22.398v44.801h-22.403Zm-22.402-22.402h-22.398v44.801h22.398v-44.801Zm-44.801 22.402h-22.398v22.398h22.398v-22.398Zm-89.598 0v22.398h44.801v-22.398H78.808Zm112 44.801v-22.398H168.41v22.398h22.398Zm-44.801 22.398h22.398v-22.398h-22.398v22.398Zm-89.602-22.398h22.398v-22.398H56.405v22.398Zm0 22.398V280.4h22.398v-22.398H56.405ZM78.807 280.4v22.398h22.398V280.4H78.807Zm-22.402 44.801v44.801h22.398v-22.398h22.398v-22.398l-44.796-.005Zm44.801 44.801h44.801v-22.398h-44.801v22.398Zm246.4-112v-22.398h-22.398v22.398h22.398Zm-156.8 112h-22.398V392.4h22.398v-22.398ZM168.404 392.4h-112v44.801h22.398v-22.398H101.2v22.398h22.398v-22.398h22.398v22.398h67.199v-22.398h-44.801l.01-22.403Zm89.602 44.801v-22.398h-22.398v22.398h22.398Zm22.398 0h22.398v-22.398h-22.398v22.398Zm0-156.8h44.801v-22.398h-22.398v-22.398h-22.398v22.398h-22.398v67.199h44.801v-22.398h-22.398l-.01-22.403Zm-67.199 134.4h22.398v-22.398h-22.398v22.398Zm-44.801-89.602h-22.398v22.398h44.801v-44.801h-22.398l-.005 22.403ZM146.006 258h-22.398v-22.398H101.21v44.801h22.398v22.398H101.21v22.398h44.801L146.006 258Zm89.602 112v22.398h22.398V370h22.398v22.398h22.398v-44.801h-67.199v-44.801h-22.398v67.199l22.403.005Zm-67.203-89.602h22.398v22.398h22.398v-22.398h22.398V258H168.4l.005 22.398Zm44.801-44.797h22.398v-22.398h-22.398v22.398Zm22.402 0v22.398h22.398v-22.398h-22.398Zm89.598 0v-22.398h-22.398v22.398h22.398Zm22.402-44.801H325.21v22.398h22.398V190.8Zm22.398 0v44.801h22.398V190.8h-22.398Zm0 89.598v22.398h22.398v-22.398h22.398V258H437.2v-44.801h-22.398v22.398h-22.398v22.398h-44.801v22.398l22.403.005ZM325.205 302.8h22.398v-22.398h-22.398V302.8ZM414.807.4v22.398h56v56h22.398V.4h-78.398Zm-392 22.402h56V.404H.409v78.398h22.398v-56Zm0 392H.409V493.2h78.398v-22.398h-56v-56Zm448 56h-56V493.2h78.398v-78.398h-22.398v56Zm-33.602-168v-22.398h-22.398v22.398h22.398Z"
                  fill={
                    {
                      "payload": 4294967295,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View>
            <View
              style={
                {
                  "backgroundColor": "#fff",
                  "borderRadius": 8,
                  "padding": 8,
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="popcha_add_manually"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      {
                        "color": "#3742fa",
                      },
                      {
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Enter Manually
                </Text>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "backgroundColor": "#fff",
                    "borderRadius": 8,
                    "padding": 8,
                  },
                  {
                    "marginTop": 8,
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="popcha_scanner_button"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      {
                        "color": "#3742fa",
                      },
                    ]
                  }
                >
                  Close Scanner
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;

exports[`Popcha scanner correct behavior when sending request shows error message with failed request 2`] = `
[
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 0,
        }
      }
    >
      <View />
    </View>
    <View
      style={
        {
          "flex": 1,
          "flexDirection": "column",
          "margin": 16,
        }
      }
    >
      <View
        style={
          {
            "bottom": 0,
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "space-between",
            }
          }
        >
          <View />
          <View
            style={
              {
                "opacity": 0.5,
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="300"
              bbWidth="300"
              focusable={false}
              height={300}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 300,
                    "width": 300,
                  },
                ]
              }
              vbHeight={494}
              vbWidth={494}
              width={300}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M392.4 101.2h-22.398v22.398H392.4V101.2Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199V78.802h67.199v67.199Zm-313.6-22.398h22.398v-22.398h-22.398v22.398ZM56.402 168.4h112v-112h-112v112Zm22.402-89.598h67.199v67.199H78.804V78.802Zm313.6 291.2h-22.398V392.4h22.398v-22.398Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199v-67.199h67.199v67.199Zm-156.8-291.2h22.398v-22.398h22.398V78.807h-22.398V56.409h-67.199v22.398h44.801v22.398h-22.398v44.801h22.398v-22.403Zm-22.398 22.398h-22.398v22.398h22.398v-22.398Zm-44.801-22.398v22.398h22.398v-22.398h-22.398Zm0-22.402h22.398V78.803h-22.398v22.398Zm-44.801 112h-22.398v22.398h22.398v-22.398Zm89.602-22.398v22.398h67.199v-22.398H280.41v-44.801h-22.398v44.801h-22.403Zm-22.402-22.402h-22.398v44.801h22.398v-44.801Zm-44.801 22.402h-22.398v22.398h22.398v-22.398Zm-89.598 0v22.398h44.801v-22.398H78.808Zm112 44.801v-22.398H168.41v22.398h22.398Zm-44.801 22.398h22.398v-22.398h-22.398v22.398Zm-89.602-22.398h22.398v-22.398H56.405v22.398Zm0 22.398V280.4h22.398v-22.398H56.405ZM78.807 280.4v22.398h22.398V280.4H78.807Zm-22.402 44.801v44.801h22.398v-22.398h22.398v-22.398l-44.796-.005Zm44.801 44.801h44.801v-22.398h-44.801v22.398Zm246.4-112v-22.398h-22.398v22.398h22.398Zm-156.8 112h-22.398V392.4h22.398v-22.398ZM168.404 392.4h-112v44.801h22.398v-22.398H101.2v22.398h22.398v-22.398h22.398v22.398h67.199v-22.398h-44.801l.01-22.403Zm89.602 44.801v-22.398h-22.398v22.398h22.398Zm22.398 0h22.398v-22.398h-22.398v22.398Zm0-156.8h44.801v-22.398h-22.398v-22.398h-22.398v22.398h-22.398v67.199h44.801v-22.398h-22.398l-.01-22.403Zm-67.199 134.4h22.398v-22.398h-22.398v22.398Zm-44.801-89.602h-22.398v22.398h44.801v-44.801h-22.398l-.005 22.403ZM146.006 258h-22.398v-22.398H101.21v44.801h22.398v22.398H101.21v22.398h44.801L146.006 258Zm89.602 112v22.398h22.398V370h22.398v22.398h22.398v-44.801h-67.199v-44.801h-22.398v67.199l22.403.005Zm-67.203-89.602h22.398v22.398h22.398v-22.398h22.398V258H168.4l.005 22.398Zm44.801-44.797h22.398v-22.398h-22.398v22.398Zm22.402 0v22.398h22.398v-22.398h-22.398Zm89.598 0v-22.398h-22.398v22.398h22.398Zm22.402-44.801H325.21v22.398h22.398V190.8Zm22.398 0v44.801h22.398V190.8h-22.398Zm0 89.598v22.398h22.398v-22.398h22.398V258H437.2v-44.801h-22.398v22.398h-22.398v22.398h-44.801v22.398l22.403.005ZM325.205 302.8h22.398v-22.398h-22.398V302.8ZM414.807.4v22.398h56v56h22.398V.4h-78.398Zm-392 22.402h56V.404H.409v78.398h22.398v-56Zm0 392H.409V493.2h78.398v-22.398h-56v-56Zm448 56h-56V493.2h78.398v-78.398h-22.398v56Zm-33.602-168v-22.398h-22.398v22.398h22.398Z"
                  fill={
                    {
                      "payload": 4294967295,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View>
            <View
              style={
                {
                  "backgroundColor": "#fff",
                  "borderRadius": 8,
                  "padding": 8,
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="popcha_add_manually"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      {
                        "color": "#3742fa",
                      },
                      {
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Enter Manually
                </Text>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "backgroundColor": "#fff",
                    "borderRadius": 8,
                    "padding": 8,
                  },
                  {
                    "marginTop": 8,
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="popcha_scanner_button"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      {
                        "color": "#3742fa",
                      },
                    ]
                  }
                >
                  Close Scanner
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;

exports[`Popcha scanner manual input works correctly closes scanner and confirmation modal when url is valid 1`] = `
<View
  style={
    {
      "flex": 1,
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 0,
      }
    }
  />
  <View
    style={
      {
        "flex": 1,
        "flexDirection": "column",
        "margin": 16,
      }
    }
  >
    <View
      style={
        {
          "bottom": 0,
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "space-between",
          }
        }
      >
        <View>
          <Text
            style={
              {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "marginBottom": 16,
                "textAlign": "left",
              }
            }
          >
            Welcome on the PoPcha screen, you are currently in the LAO: 
            -
            M
            2
            5
            9
            c
            5
            J
            l
            a
            k
            L
            V
            l
            X
            B
            R
            a
            8
            9
            3
            p
            c
            E
            -
            4
            s
            7
            s
            s
            O
            8
            J
            v
            5
            g
            X
            O
            v
            t
            r
            e
            E
            =
          </Text>
        </View>
        <View>
          <View
            style={
              [
                {
                  "backgroundColor": "#fff",
                  "borderRadius": 8,
                  "padding": 8,
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
              testID="popcha_scanner_button"
            >
              <Text
                style={
                  [
                    {
                      "color": "#000",
                      "fontSize": 20,
                      "lineHeight": 26,
                      "textAlign": "left",
                    },
                    {
                      "color": "#3742fa",
                    },
                  ]
                }
              >
                Open Scanner
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Popcha scanner manual input works correctly shows error message with invalid url 1`] = `
[
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 0,
        }
      }
    >
      <View />
    </View>
    <View
      style={
        {
          "flex": 1,
          "flexDirection": "column",
          "margin": 16,
        }
      }
    >
      <View
        style={
          {
            "bottom": 0,
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "space-between",
            }
          }
        >
          <View />
          <View
            style={
              {
                "opacity": 0.5,
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="300"
              bbWidth="300"
              focusable={false}
              height={300}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 300,
                    "width": 300,
                  },
                ]
              }
              vbHeight={494}
              vbWidth={494}
              width={300}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M392.4 101.2h-22.398v22.398H392.4V101.2Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199V78.802h67.199v67.199Zm-313.6-22.398h22.398v-22.398h-22.398v22.398ZM56.402 168.4h112v-112h-112v112Zm22.402-89.598h67.199v67.199H78.804V78.802Zm313.6 291.2h-22.398V392.4h22.398v-22.398Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199v-67.199h67.199v67.199Zm-156.8-291.2h22.398v-22.398h22.398V78.807h-22.398V56.409h-67.199v22.398h44.801v22.398h-22.398v44.801h22.398v-22.403Zm-22.398 22.398h-22.398v22.398h22.398v-22.398Zm-44.801-22.398v22.398h22.398v-22.398h-22.398Zm0-22.402h22.398V78.803h-22.398v22.398Zm-44.801 112h-22.398v22.398h22.398v-22.398Zm89.602-22.398v22.398h67.199v-22.398H280.41v-44.801h-22.398v44.801h-22.403Zm-22.402-22.402h-22.398v44.801h22.398v-44.801Zm-44.801 22.402h-22.398v22.398h22.398v-22.398Zm-89.598 0v22.398h44.801v-22.398H78.808Zm112 44.801v-22.398H168.41v22.398h22.398Zm-44.801 22.398h22.398v-22.398h-22.398v22.398Zm-89.602-22.398h22.398v-22.398H56.405v22.398Zm0 22.398V280.4h22.398v-22.398H56.405ZM78.807 280.4v22.398h22.398V280.4H78.807Zm-22.402 44.801v44.801h22.398v-22.398h22.398v-22.398l-44.796-.005Zm44.801 44.801h44.801v-22.398h-44.801v22.398Zm246.4-112v-22.398h-22.398v22.398h22.398Zm-156.8 112h-22.398V392.4h22.398v-22.398ZM168.404 392.4h-112v44.801h22.398v-22.398H101.2v22.398h22.398v-22.398h22.398v22.398h67.199v-22.398h-44.801l.01-22.403Zm89.602 44.801v-22.398h-22.398v22.398h22.398Zm22.398 0h22.398v-22.398h-22.398v22.398Zm0-156.8h44.801v-22.398h-22.398v-22.398h-22.398v22.398h-22.398v67.199h44.801v-22.398h-22.398l-.01-22.403Zm-67.199 134.4h22.398v-22.398h-22.398v22.398Zm-44.801-89.602h-22.398v22.398h44.801v-44.801h-22.398l-.005 22.403ZM146.006 258h-22.398v-22.398H101.21v44.801h22.398v22.398H101.21v22.398h44.801L146.006 258Zm89.602 112v22.398h22.398V370h22.398v22.398h22.398v-44.801h-67.199v-44.801h-22.398v67.199l22.403.005Zm-67.203-89.602h22.398v22.398h22.398v-22.398h22.398V258H168.4l.005 22.398Zm44.801-44.797h22.398v-22.398h-22.398v22.398Zm22.402 0v22.398h22.398v-22.398h-22.398Zm89.598 0v-22.398h-22.398v22.398h22.398Zm22.402-44.801H325.21v22.398h22.398V190.8Zm22.398 0v44.801h22.398V190.8h-22.398Zm0 89.598v22.398h22.398v-22.398h22.398V258H437.2v-44.801h-22.398v22.398h-22.398v22.398h-44.801v22.398l22.403.005ZM325.205 302.8h22.398v-22.398h-22.398V302.8ZM414.807.4v22.398h56v56h22.398V.4h-78.398Zm-392 22.402h56V.404H.409v78.398h22.398v-56Zm0 392H.409V493.2h78.398v-22.398h-56v-56Zm448 56h-56V493.2h78.398v-78.398h-22.398v56Zm-33.602-168v-22.398h-22.398v22.398h22.398Z"
                  fill={
                    {
                      "payload": 4294967295,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View>
            <View
              style={
                {
                  "backgroundColor": "#fff",
                  "borderRadius": 8,
                  "padding": 8,
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="popcha_add_manually"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      {
                        "color": "#3742fa",
                      },
                      {
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Enter Manually
                </Text>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "backgroundColor": "#fff",
                    "borderRadius": 8,
                    "padding": 8,
                  },
                  {
                    "marginTop": 8,
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="popcha_scanner_button"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      {
                        "color": "#3742fa",
                      },
                    ]
                  }
                >
                  Close Scanner
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={true}
  >
    <RNGestureHandlerButton
      collapsable={false}
      delayLongPress={600}
      enabled={true}
      exclusive={true}
      handlerTag={1}
      handlerType="NativeViewGestureHandler"
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
      style={
        {
          "backgroundColor": "rgba(0,0,0,0.25)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "padding": 32,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      touchSoundDisabled={false}
    >
      <View
        accessible={true}
        collapsable={false}
        style={{}}
      />
    </RNGestureHandlerButton>
    <RCTScrollView
      collapsable={false}
      handlerTag={2}
      handlerType="NativeViewGestureHandler"
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      style={
        {
          "backgroundColor": "rgb(242, 242, 242)",
          "borderRadius": 8,
          "margin": 32,
          "padding": 32,
        }
      }
      waitFor={
        [
          {
            "current": null,
          },
        ]
      }
    >
      <View>
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "marginBottom": 16,
              "width": "100%",
            }
          }
        >
          <View />
          <Text
            numberOfLines={1}
            style={
              {
                "color": "#000",
                "fontSize": 20,
                "fontWeight": "500",
                "lineHeight": 26,
                "textAlign": "left",
              }
            }
          >
            Enter url
          </Text>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="modal-header-close"
          >
            <View>
              {"name":"ios-close","size":25,"color":"#000"}
            </View>
          </View>
        </View>
        <Text
          style={
            {
              "color": "#000",
              "fontSize": 20,
              "lineHeight": 26,
              "marginBottom": 16,
              "textAlign": "left",
            }
          }
        >
          Enter the url you want to use to login
        </Text>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            editable={true}
            onChangeText={[Function]}
            placeholder="Url"
            placeholderTextColor="#8E8E8E"
            style={
              [
                {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "marginBottom": 16,
                  "textAlign": "left",
                },
                {
                  "backgroundColor": "#fff",
                  "borderColor": "#fff",
                  "borderRadius": 8,
                  "borderWidth": 1,
                  "flex": 1,
                  "padding": 8,
                  "width": 50,
                },
              ]
            }
            testID="confirm-modal-input"
            value="invalid url"
          />
        </View>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
          testID="confirm-modal-confirm"
        >
          <View
            style={
              [
                {
                  "backgroundColor": "#3742fa",
                  "borderColor": "#3742fa",
                  "borderRadius": 8,
                  "borderWidth": 1,
                  "padding": 8,
                },
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#000",
                    "fontSize": 20,
                    "lineHeight": 26,
                    "textAlign": "left",
                  },
                  {
                    "textAlign": "center",
                  },
                  {
                    "color": "#fff",
                  },
                ]
              }
            >
              Add
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </Modal>,
]
`;

exports[`Popcha scanner scanner renders correctly renders correctly a closed scanner 1`] = `
<View
  style={
    {
      "flex": 1,
      "overflow": "hidden",
    }
  }
>
  <View
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 0,
      }
    }
  />
  <View
    style={
      {
        "flex": 1,
        "flexDirection": "column",
        "margin": 16,
      }
    }
  >
    <View
      style={
        {
          "bottom": 0,
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "space-between",
          }
        }
      >
        <View>
          <Text
            style={
              {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "marginBottom": 16,
                "textAlign": "left",
              }
            }
          >
            Welcome on the PoPcha screen, you are currently in the LAO: 
            -
            M
            2
            5
            9
            c
            5
            J
            l
            a
            k
            L
            V
            l
            X
            B
            R
            a
            8
            9
            3
            p
            c
            E
            -
            4
            s
            7
            s
            s
            O
            8
            J
            v
            5
            g
            X
            O
            v
            t
            r
            e
            E
            =
          </Text>
        </View>
        <View>
          <View
            style={
              [
                {
                  "backgroundColor": "#fff",
                  "borderRadius": 8,
                  "padding": 8,
                },
                {
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "opacity": 1,
                }
              }
              testID="popcha_scanner_button"
            >
              <Text
                style={
                  [
                    {
                      "color": "#000",
                      "fontSize": 20,
                      "lineHeight": 26,
                      "textAlign": "left",
                    },
                    {
                      "color": "#3742fa",
                    },
                  ]
                }
              >
                Open Scanner
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Popcha scanner scanner renders correctly renders correctly a opened scanner 1`] = `
[
  <View
    style={
      {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 0,
        }
      }
    >
      <View />
    </View>
    <View
      style={
        {
          "flex": 1,
          "flexDirection": "column",
          "margin": 16,
        }
      }
    >
      <View
        style={
          {
            "bottom": 0,
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "space-between",
            }
          }
        >
          <View />
          <View
            style={
              {
                "opacity": 0.5,
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="300"
              bbWidth="300"
              focusable={false}
              height={300}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 300,
                    "width": 300,
                  },
                ]
              }
              vbHeight={494}
              vbWidth={494}
              width={300}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M392.4 101.2h-22.398v22.398H392.4V101.2Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199V78.802h67.199v67.199Zm-313.6-22.398h22.398v-22.398h-22.398v22.398ZM56.402 168.4h112v-112h-112v112Zm22.402-89.598h67.199v67.199H78.804V78.802Zm313.6 291.2h-22.398V392.4h22.398v-22.398Zm44.801-44.801h-112v112h112v-112Zm-22.398 89.602h-67.199v-67.199h67.199v67.199Zm-156.8-291.2h22.398v-22.398h22.398V78.807h-22.398V56.409h-67.199v22.398h44.801v22.398h-22.398v44.801h22.398v-22.403Zm-22.398 22.398h-22.398v22.398h22.398v-22.398Zm-44.801-22.398v22.398h22.398v-22.398h-22.398Zm0-22.402h22.398V78.803h-22.398v22.398Zm-44.801 112h-22.398v22.398h22.398v-22.398Zm89.602-22.398v22.398h67.199v-22.398H280.41v-44.801h-22.398v44.801h-22.403Zm-22.402-22.402h-22.398v44.801h22.398v-44.801Zm-44.801 22.402h-22.398v22.398h22.398v-22.398Zm-89.598 0v22.398h44.801v-22.398H78.808Zm112 44.801v-22.398H168.41v22.398h22.398Zm-44.801 22.398h22.398v-22.398h-22.398v22.398Zm-89.602-22.398h22.398v-22.398H56.405v22.398Zm0 22.398V280.4h22.398v-22.398H56.405ZM78.807 280.4v22.398h22.398V280.4H78.807Zm-22.402 44.801v44.801h22.398v-22.398h22.398v-22.398l-44.796-.005Zm44.801 44.801h44.801v-22.398h-44.801v22.398Zm246.4-112v-22.398h-22.398v22.398h22.398Zm-156.8 112h-22.398V392.4h22.398v-22.398ZM168.404 392.4h-112v44.801h22.398v-22.398H101.2v22.398h22.398v-22.398h22.398v22.398h67.199v-22.398h-44.801l.01-22.403Zm89.602 44.801v-22.398h-22.398v22.398h22.398Zm22.398 0h22.398v-22.398h-22.398v22.398Zm0-156.8h44.801v-22.398h-22.398v-22.398h-22.398v22.398h-22.398v67.199h44.801v-22.398h-22.398l-.01-22.403Zm-67.199 134.4h22.398v-22.398h-22.398v22.398Zm-44.801-89.602h-22.398v22.398h44.801v-44.801h-22.398l-.005 22.403ZM146.006 258h-22.398v-22.398H101.21v44.801h22.398v22.398H101.21v22.398h44.801L146.006 258Zm89.602 112v22.398h22.398V370h22.398v22.398h22.398v-44.801h-67.199v-44.801h-22.398v67.199l22.403.005Zm-67.203-89.602h22.398v22.398h22.398v-22.398h22.398V258H168.4l.005 22.398Zm44.801-44.797h22.398v-22.398h-22.398v22.398Zm22.402 0v22.398h22.398v-22.398h-22.398Zm89.598 0v-22.398h-22.398v22.398h22.398Zm22.402-44.801H325.21v22.398h22.398V190.8Zm22.398 0v44.801h22.398V190.8h-22.398Zm0 89.598v22.398h22.398v-22.398h22.398V258H437.2v-44.801h-22.398v22.398h-22.398v22.398h-44.801v22.398l22.403.005ZM325.205 302.8h22.398v-22.398h-22.398V302.8ZM414.807.4v22.398h56v56h22.398V.4h-78.398Zm-392 22.402h56V.404H.409v78.398h22.398v-56Zm0 392H.409V493.2h78.398v-22.398h-56v-56Zm448 56h-56V493.2h78.398v-78.398h-22.398v56Zm-33.602-168v-22.398h-22.398v22.398h22.398Z"
                  fill={
                    {
                      "payload": 4294967295,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "fill",
                    ]
                  }
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View>
            <View
              style={
                {
                  "backgroundColor": "#fff",
                  "borderRadius": 8,
                  "padding": 8,
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="popcha_add_manually"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      {
                        "color": "#3742fa",
                      },
                      {
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Enter Manually
                </Text>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "backgroundColor": "#fff",
                    "borderRadius": 8,
                    "padding": 8,
                  },
                  {
                    "marginTop": 8,
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "opacity": 1,
                  }
                }
                testID="popcha_scanner_button"
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000",
                        "fontSize": 20,
                        "lineHeight": 26,
                        "textAlign": "left",
                      },
                      {
                        "color": "#3742fa",
                      },
                    ]
                  }
                >
                  Close Scanner
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;
