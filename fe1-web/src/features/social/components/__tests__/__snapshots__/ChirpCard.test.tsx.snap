// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChirpCard for deletion render correct for a deleted chirp 1`] = `
Array [
  <View
    style={
      Object {
        "borderColor": "gray",
        "borderTopWidth": 0,
        "borderWidth": 1,
        "flexDirection": "column",
        "padding": 10,
        "width": 600,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "width": 60,
          }
        }
      >
        ProfileIcon
      </View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
          }
        }
      >
        <View
          style={
            Object {
              "fontSize": 18,
              "marginTop": 7,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "600",
              }
            }
          >
            oKHk3AivbpNXk_SfFcHDaVHcCcY8IBfHE7auXJ7h4ms=
          </Text>
        </View>
        <Text
          style={
            Object {
              "color": "gray",
              "fontSize": 18,
              "paddingBottom": 20,
              "paddingTop": 10,
              "width": 520,
            }
          }
        >
          This chirp was deleted
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "fontSize": 18,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": "auto",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "textAlign": "left",
              },
              Object {
                "fontSize": 16,
                "lineHeight": 20,
              },
            ]
          }
        >
          <time
            dateTime="2020-12-31T23:00:00.000Z"
            title="2020-12-31 23:00"
          >
            4 months ago
          </time>
        </Text>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;

exports[`ChirpCard for deletion renders correctly for non-sender 1`] = `
Array [
  <View
    style={
      Object {
        "borderColor": "gray",
        "borderTopWidth": 0,
        "borderWidth": 1,
        "flexDirection": "column",
        "padding": 10,
        "width": 600,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "width": 60,
          }
        }
      >
        ProfileIcon
      </View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
          }
        }
      >
        <View
          style={
            Object {
              "fontSize": 18,
              "marginTop": 7,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "600",
              }
            }
          >
            oKHk3AivbpNXk_SfFcHDaVHcCcY8IBfHE7auXJ7h4ms=
          </Text>
        </View>
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 20,
              "paddingTop": 10,
              "width": 520,
            }
          }
        >
          Don't panic.
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "fontSize": 18,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="thumbs-up"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={5}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"thumbs-up-sharp","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                1
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="thumbs-down"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={6}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"thumbs-down-sharp","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="heart"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={7}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"heart","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": "auto",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "textAlign": "left",
              },
              Object {
                "fontSize": 16,
                "lineHeight": 20,
              },
            ]
          }
        >
          <time
            dateTime="2020-12-31T23:00:00.000Z"
            title="2020-12-31 23:00"
          >
            4 months ago
          </time>
        </Text>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;

exports[`ChirpCard for deletion renders correctly for sender 1`] = `
Array [
  <View
    style={
      Object {
        "borderColor": "gray",
        "borderTopWidth": 0,
        "borderWidth": 1,
        "flexDirection": "column",
        "padding": 10,
        "width": 600,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "width": 60,
          }
        }
      >
        ProfileIcon
      </View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
          }
        }
      >
        <View
          style={
            Object {
              "fontSize": 18,
              "marginTop": 7,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "600",
              }
            }
          >
            oKHk3AivbpNXk_SfFcHDaVHcCcY8IBfHE7auXJ7h4ms=
          </Text>
        </View>
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 20,
              "paddingTop": 10,
              "width": 520,
            }
          }
        >
          Don't panic.
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "fontSize": 18,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="thumbs-up"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={1}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"thumbs-up-sharp","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                1
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="thumbs-down"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={2}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"thumbs-down-sharp","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="heart"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={3}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"heart","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginRight": "auto",
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 16,
            }
          }
          testID="delete_chirp_1234"
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={4}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#3742fa",
                      "borderColor": "#3742fa",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "padding": 8,
                    },
                  ]
                }
              >
                <View>
                  {"name":"ios-trash","size":25,"color":"#fff"}
                </View>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "marginLeft": "auto",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "textAlign": "left",
              },
              Object {
                "fontSize": 16,
                "lineHeight": 20,
              },
            ]
          }
        >
          <time
            dateTime="2020-12-31T23:00:00.000Z"
            title="2020-12-31 23:00"
          >
            4 months ago
          </time>
        </Text>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;

exports[`ChirpCard for reaction renders correctly with reaction 1`] = `
Array [
  <View
    style={
      Object {
        "borderColor": "gray",
        "borderTopWidth": 0,
        "borderWidth": 1,
        "flexDirection": "column",
        "padding": 10,
        "width": 600,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "width": 60,
          }
        }
      >
        ProfileIcon
      </View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
          }
        }
      >
        <View
          style={
            Object {
              "fontSize": 18,
              "marginTop": 7,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "600",
              }
            }
          >
            oKHk3AivbpNXk_SfFcHDaVHcCcY8IBfHE7auXJ7h4ms=
          </Text>
        </View>
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 20,
              "paddingTop": 10,
              "width": 520,
            }
          }
        >
          Don't panic.
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "fontSize": 18,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="thumbs-up"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={16}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"thumbs-up-sharp","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                1
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="thumbs-down"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={17}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"thumbs-down-sharp","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="heart"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={18}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"heart","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginRight": "auto",
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 16,
            }
          }
          testID="delete_chirp_1234"
        >
          <RNGestureHandlerButton
            collapsable={false}
            exclusive={true}
            handlerTag={19}
            handlerType="NativeViewGestureHandler"
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            touchSoundDisabled={false}
          >
            <View
              accessible={true}
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#3742fa",
                      "borderColor": "#3742fa",
                      "borderRadius": 8,
                      "borderWidth": 1,
                      "padding": 8,
                    },
                  ]
                }
              >
                <View>
                  {"name":"ios-trash","size":25,"color":"#fff"}
                </View>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
      </View>
      <View
        style={
          Object {
            "marginLeft": "auto",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "textAlign": "left",
              },
              Object {
                "fontSize": 16,
                "lineHeight": 20,
              },
            ]
          }
        >
          <time
            dateTime="2020-12-31T23:00:00.000Z"
            title="2020-12-31 23:00"
          >
            4 months ago
          </time>
        </Text>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;

exports[`ChirpCard for reaction renders correctly without reaction 1`] = `
Array [
  <View
    style={
      Object {
        "borderColor": "gray",
        "borderTopWidth": 0,
        "borderWidth": 1,
        "flexDirection": "column",
        "padding": 10,
        "width": 600,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          Object {
            "width": 60,
          }
        }
      >
        ProfileIcon
      </View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
          }
        }
      >
        <View
          style={
            Object {
              "fontSize": 18,
              "marginTop": 7,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "fontWeight": "600",
              }
            }
          >
            Anonymous
          </Text>
        </View>
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 20,
              "paddingTop": 10,
              "width": 520,
            }
          }
        >
          Ignore me
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
              "fontSize": 18,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="thumbs-up"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={20}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"thumbs-up-sharp","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="thumbs-down"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={21}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"thumbs-down-sharp","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "marginRight": 10,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginBottom": 16,
                }
              }
              testID="heart"
            >
              <RNGestureHandlerButton
                collapsable={false}
                exclusive={true}
                handlerTag={22}
                handlerType="NativeViewGestureHandler"
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
                touchSoundDisabled={false}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#3742fa",
                          "borderColor": "#3742fa",
                          "borderRadius": 8,
                          "borderWidth": 1,
                          "padding": 8,
                        },
                      ]
                    }
                  >
                    <View>
                      {"name":"heart","size":25,"color":"#fff"}
                    </View>
                  </View>
                </View>
              </RNGestureHandlerButton>
            </View>
            <Text>
                0
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "display": "flex",
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": "auto",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "textAlign": "left",
              },
              Object {
                "fontSize": 16,
                "lineHeight": 20,
              },
            ]
          }
        >
          <time
            dateTime="2020-12-31T23:00:00.000Z"
            title="2020-12-31 23:00"
          >
            4 months ago
          </time>
        </Text>
      </View>
    </View>
  </View>,
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
]
`;
