// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChirpCard for deletion render correct for a deleted chirp 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#bcbbc1",
        "flexDirection": "row",
        "padding": 14,
      }
    }
    testID="RNE__LISTITEM__padView"
  >
    <View
      style={
        Array [
          Object {
            "marginRight": 16,
          },
          Object {
            "alignSelf": "flex-start",
          },
        ]
      }
    >
      ProfileIcon
    </View>
    <View
      style={
        Object {
          "paddingLeft": 16,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      theme={
        Object {
          "colors": Object {
            "background": "#ffffff",
            "black": "#242424",
            "disabled": "hsl(208, 8%, 90%)",
            "divider": "#bcbbc1",
            "error": "#ff190c",
            "grey0": "#393e42",
            "grey1": "#43484d",
            "grey2": "#5e6977",
            "grey3": "#86939e",
            "grey4": "#bdc6cf",
            "grey5": "#e1e8ee",
            "greyOutline": "#bbb",
            "platform": Object {
              "android": Object {
                "error": "#f44336",
                "grey": "rgba(0, 0, 0, 0.54)",
                "primary": "#2196f3",
                "searchBg": "#dcdce1",
                "secondary": "#9C27B0",
                "success": "#4caf50",
                "warning": "#ffeb3b",
              },
              "default": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "ios": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "web": Object {
                "error": "#ff190c",
                "grey": "#393e42",
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#ca71eb",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            },
            "primary": "#2089dc",
            "searchBg": "#303337",
            "secondary": "#03dac4",
            "success": "#52c41a",
            "warning": "#faad14",
            "white": "#ffffff",
          },
          "spacing": Object {
            "lg": 12,
            "md": 8,
            "sm": 4,
            "xl": 24,
            "xs": 2,
          },
        }
      }
    >
      <Text
        accessibilityRole="text"
        numberOfLines={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#8E8E8E",
            "fontSize": 16,
            "lineHeight": 20,
            "textAlign": "left",
          }
        }
        testID="listItemTitle"
      >
        oKHk3AivbpNXk_SfFcHDaVHcCcY8IBfHE7auXJ7h4ms=
      </Text>
      <Text
        accessibilityRole="text"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#242424",
            "fontSize": 15,
          }
        }
        testID="listItemTitle"
      >
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "fontSize": 20,
                "lineHeight": 26,
                "textAlign": "left",
              },
              Object {
                "color": "#8E8E8E",
              },
            ]
          }
        >
          This chirp was deleted
        </Text>
      </Text>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        />
        <View
          style={
            Object {
              "alignSelf": "flex-end",
              "marginLeft": "auto",
              "marginTop": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
              ]
            }
          >
            <time
              dateTime="2020-12-31T23:00:00.000Z"
              title="2020-12-31 23:00"
            >
              4 months ago
            </time>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ChirpCard for deletion renders correctly for non-sender 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#bcbbc1",
        "flexDirection": "row",
        "padding": 14,
      }
    }
    testID="RNE__LISTITEM__padView"
  >
    <View
      style={
        Array [
          Object {
            "marginRight": 16,
          },
          Object {
            "alignSelf": "flex-start",
          },
        ]
      }
    >
      ProfileIcon
    </View>
    <View
      style={
        Object {
          "paddingLeft": 16,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      theme={
        Object {
          "colors": Object {
            "background": "#ffffff",
            "black": "#242424",
            "disabled": "hsl(208, 8%, 90%)",
            "divider": "#bcbbc1",
            "error": "#ff190c",
            "grey0": "#393e42",
            "grey1": "#43484d",
            "grey2": "#5e6977",
            "grey3": "#86939e",
            "grey4": "#bdc6cf",
            "grey5": "#e1e8ee",
            "greyOutline": "#bbb",
            "platform": Object {
              "android": Object {
                "error": "#f44336",
                "grey": "rgba(0, 0, 0, 0.54)",
                "primary": "#2196f3",
                "searchBg": "#dcdce1",
                "secondary": "#9C27B0",
                "success": "#4caf50",
                "warning": "#ffeb3b",
              },
              "default": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "ios": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "web": Object {
                "error": "#ff190c",
                "grey": "#393e42",
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#ca71eb",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            },
            "primary": "#2089dc",
            "searchBg": "#303337",
            "secondary": "#03dac4",
            "success": "#52c41a",
            "warning": "#faad14",
            "white": "#ffffff",
          },
          "spacing": Object {
            "lg": 12,
            "md": 8,
            "sm": 4,
            "xl": 24,
            "xs": 2,
          },
        }
      }
    >
      <Text
        accessibilityRole="text"
        numberOfLines={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#8E8E8E",
            "fontSize": 16,
            "lineHeight": 20,
            "textAlign": "left",
          }
        }
        testID="listItemTitle"
      >
        oKHk3AivbpNXk_SfFcHDaVHcCcY8IBfHE7auXJ7h4ms=
      </Text>
      <Text
        accessibilityRole="text"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#242424",
            "fontSize": 15,
          }
        }
        testID="listItemTitle"
      >
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 20,
              "lineHeight": 26,
              "textAlign": "left",
            }
          }
        >
          Don't panic.
        </Text>
      </Text>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="thumbs-up"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={5}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"thumbs-up-sharp","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            1
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="thumbs-down"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={6}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"thumbs-down-sharp","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="heart"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={7}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"heart","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        />
        <View
          style={
            Object {
              "alignSelf": "flex-end",
              "marginLeft": "auto",
              "marginTop": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
              ]
            }
          >
            <time
              dateTime="2020-12-31T23:00:00.000Z"
              title="2020-12-31 23:00"
            >
              4 months ago
            </time>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ChirpCard for deletion renders correctly for sender 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#bcbbc1",
        "flexDirection": "row",
        "padding": 14,
      }
    }
    testID="RNE__LISTITEM__padView"
  >
    <View
      style={
        Array [
          Object {
            "marginRight": 16,
          },
          Object {
            "alignSelf": "flex-start",
          },
        ]
      }
    >
      ProfileIcon
    </View>
    <View
      style={
        Object {
          "paddingLeft": 16,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      theme={
        Object {
          "colors": Object {
            "background": "#ffffff",
            "black": "#242424",
            "disabled": "hsl(208, 8%, 90%)",
            "divider": "#bcbbc1",
            "error": "#ff190c",
            "grey0": "#393e42",
            "grey1": "#43484d",
            "grey2": "#5e6977",
            "grey3": "#86939e",
            "grey4": "#bdc6cf",
            "grey5": "#e1e8ee",
            "greyOutline": "#bbb",
            "platform": Object {
              "android": Object {
                "error": "#f44336",
                "grey": "rgba(0, 0, 0, 0.54)",
                "primary": "#2196f3",
                "searchBg": "#dcdce1",
                "secondary": "#9C27B0",
                "success": "#4caf50",
                "warning": "#ffeb3b",
              },
              "default": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "ios": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "web": Object {
                "error": "#ff190c",
                "grey": "#393e42",
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#ca71eb",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            },
            "primary": "#2089dc",
            "searchBg": "#303337",
            "secondary": "#03dac4",
            "success": "#52c41a",
            "warning": "#faad14",
            "white": "#ffffff",
          },
          "spacing": Object {
            "lg": 12,
            "md": 8,
            "sm": 4,
            "xl": 24,
            "xs": 2,
          },
        }
      }
    >
      <Text
        accessibilityRole="text"
        numberOfLines={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#8E8E8E",
            "fontSize": 16,
            "lineHeight": 20,
            "textAlign": "left",
          }
        }
        testID="listItemTitle"
      >
        oKHk3AivbpNXk_SfFcHDaVHcCcY8IBfHE7auXJ7h4ms=
      </Text>
      <Text
        accessibilityRole="text"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#242424",
            "fontSize": 15,
          }
        }
        testID="listItemTitle"
      >
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 20,
              "lineHeight": 26,
              "textAlign": "left",
            }
          }
        >
          Don't panic.
        </Text>
      </Text>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="thumbs-up"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={1}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"thumbs-up-sharp","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            1
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="thumbs-down"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={2}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"thumbs-down-sharp","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="heart"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={3}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"heart","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="chirp_action_options"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={4}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"ios-ellipsis-horizontal","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
        </View>
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        />
        <View
          style={
            Object {
              "alignSelf": "flex-end",
              "marginLeft": "auto",
              "marginTop": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
              ]
            }
          >
            <time
              dateTime="2020-12-31T23:00:00.000Z"
              title="2020-12-31 23:00"
            >
              4 months ago
            </time>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ChirpCard for reaction renders correctly with reaction 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#bcbbc1",
        "flexDirection": "row",
        "padding": 14,
      }
    }
    testID="RNE__LISTITEM__padView"
  >
    <View
      style={
        Array [
          Object {
            "marginRight": 16,
          },
          Object {
            "alignSelf": "flex-start",
          },
        ]
      }
    >
      ProfileIcon
    </View>
    <View
      style={
        Object {
          "paddingLeft": 16,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      theme={
        Object {
          "colors": Object {
            "background": "#ffffff",
            "black": "#242424",
            "disabled": "hsl(208, 8%, 90%)",
            "divider": "#bcbbc1",
            "error": "#ff190c",
            "grey0": "#393e42",
            "grey1": "#43484d",
            "grey2": "#5e6977",
            "grey3": "#86939e",
            "grey4": "#bdc6cf",
            "grey5": "#e1e8ee",
            "greyOutline": "#bbb",
            "platform": Object {
              "android": Object {
                "error": "#f44336",
                "grey": "rgba(0, 0, 0, 0.54)",
                "primary": "#2196f3",
                "searchBg": "#dcdce1",
                "secondary": "#9C27B0",
                "success": "#4caf50",
                "warning": "#ffeb3b",
              },
              "default": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "ios": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "web": Object {
                "error": "#ff190c",
                "grey": "#393e42",
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#ca71eb",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            },
            "primary": "#2089dc",
            "searchBg": "#303337",
            "secondary": "#03dac4",
            "success": "#52c41a",
            "warning": "#faad14",
            "white": "#ffffff",
          },
          "spacing": Object {
            "lg": 12,
            "md": 8,
            "sm": 4,
            "xl": 24,
            "xs": 2,
          },
        }
      }
    >
      <Text
        accessibilityRole="text"
        numberOfLines={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#8E8E8E",
            "fontSize": 16,
            "lineHeight": 20,
            "textAlign": "left",
          }
        }
        testID="listItemTitle"
      >
        oKHk3AivbpNXk_SfFcHDaVHcCcY8IBfHE7auXJ7h4ms=
      </Text>
      <Text
        accessibilityRole="text"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#242424",
            "fontSize": 15,
          }
        }
        testID="listItemTitle"
      >
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 20,
              "lineHeight": 26,
              "textAlign": "left",
            }
          }
        >
          Don't panic.
        </Text>
      </Text>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="thumbs-up"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={12}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"thumbs-up-sharp","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            1
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="thumbs-down"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={13}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"thumbs-down-sharp","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="heart"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={14}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"heart","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="chirp_action_options"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={15}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"ios-ellipsis-horizontal","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
        </View>
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        />
        <View
          style={
            Object {
              "alignSelf": "flex-end",
              "marginLeft": "auto",
              "marginTop": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
              ]
            }
          >
            <time
              dateTime="2020-12-31T23:00:00.000Z"
              title="2020-12-31 23:00"
            >
              4 months ago
            </time>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ChirpCard for reaction renders correctly without reaction 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "#bcbbc1",
        "flexDirection": "row",
        "padding": 14,
      }
    }
    testID="RNE__LISTITEM__padView"
  >
    <View
      style={
        Array [
          Object {
            "marginRight": 16,
          },
          Object {
            "alignSelf": "flex-start",
          },
        ]
      }
    >
      ProfileIcon
    </View>
    <View
      style={
        Object {
          "paddingLeft": 16,
        }
      }
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      theme={
        Object {
          "colors": Object {
            "background": "#ffffff",
            "black": "#242424",
            "disabled": "hsl(208, 8%, 90%)",
            "divider": "#bcbbc1",
            "error": "#ff190c",
            "grey0": "#393e42",
            "grey1": "#43484d",
            "grey2": "#5e6977",
            "grey3": "#86939e",
            "grey4": "#bdc6cf",
            "grey5": "#e1e8ee",
            "greyOutline": "#bbb",
            "platform": Object {
              "android": Object {
                "error": "#f44336",
                "grey": "rgba(0, 0, 0, 0.54)",
                "primary": "#2196f3",
                "searchBg": "#dcdce1",
                "secondary": "#9C27B0",
                "success": "#4caf50",
                "warning": "#ffeb3b",
              },
              "default": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "ios": Object {
                "error": "#ff3b30",
                "grey": "#7d7d7d",
                "primary": "#007aff",
                "searchBg": "#dcdce1",
                "secondary": "#5856d6",
                "success": "#4cd964",
                "warning": "#ffcc00",
              },
              "web": Object {
                "error": "#ff190c",
                "grey": "#393e42",
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#ca71eb",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            },
            "primary": "#2089dc",
            "searchBg": "#303337",
            "secondary": "#03dac4",
            "success": "#52c41a",
            "warning": "#faad14",
            "white": "#ffffff",
          },
          "spacing": Object {
            "lg": 12,
            "md": 8,
            "sm": 4,
            "xl": 24,
            "xs": 2,
          },
        }
      }
    >
      <Text
        accessibilityRole="text"
        numberOfLines={1}
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#8E8E8E",
            "fontSize": 16,
            "lineHeight": 20,
            "textAlign": "left",
          }
        }
        testID="listItemTitle"
      >
        Anonymous
      </Text>
      <Text
        accessibilityRole="text"
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#242424",
            "fontSize": 15,
          }
        }
        testID="listItemTitle"
      >
        <Text
          style={
            Object {
              "color": "#000",
              "fontSize": 20,
              "lineHeight": 26,
              "textAlign": "left",
            }
          }
        >
          Ignore me
        </Text>
      </Text>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="thumbs-up"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={16}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"thumbs-up-sharp","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="thumbs-down"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={17}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"thumbs-down-sharp","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "marginRight": 16,
              "marginTop": 16,
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="heart"
          >
            <RNGestureHandlerButton
              collapsable={false}
              exclusive={true}
              handlerTag={18}
              handlerType="NativeViewGestureHandler"
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
              touchSoundDisabled={false}
            >
              <View
                accessible={true}
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#3742fa",
                        "borderColor": "#3742fa",
                        "borderRadius": 8,
                        "borderWidth": 1,
                        "padding": 8,
                      },
                    ]
                  }
                >
                  <View>
                    {"name":"heart","size":16,"color":"#fff"}
                  </View>
                </View>
              </View>
            </RNGestureHandlerButton>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
                Object {
                  "marginLeft": 8,
                },
              ]
            }
          >
            0
          </Text>
        </View>
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        />
        <View
          style={
            Object {
              "alignSelf": "flex-end",
              "marginLeft": "auto",
              "marginTop": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontSize": 20,
                  "lineHeight": 26,
                  "textAlign": "left",
                },
                Object {
                  "fontSize": 16,
                  "lineHeight": 20,
                },
              ]
            }
          >
            <time
              dateTime="2020-12-31T23:00:00.000Z"
              title="2020-12-31 23:00"
            >
              4 months ago
            </time>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
